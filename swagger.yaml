openapi: 3.0.3
info:
  title: FoodComing API Structure
  version: 1.0.0
servers:
  - url: https://formal.foodcoming.store
paths:
  /api/merchants:
    post:
      tags:
        - merchants
      summary: Setting up merchant's information
      responses:
        '200':
          description: Successfully set up
          content:
            application/json:
              schema:
                type: string
                properties:
                  token:
                    type: string
        '500':
          description: service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: error message
            
  /api/delivers:
    post:
      tags:
        - delivers
      summary: Setting up deliver person's information
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '500':
          description: Service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: error message
  
  /api/auth/signup:
    post:
      tags:
        - members
      summary: member signup
      responses:
        '200':
          description: successful signup
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: success
        '403':
          description: Already signup
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: member already exist!
        '500':
          description: other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: 伺服器回傳錯誤
  /api/auth/login:
    put:
      tags:
        - members
      summary: member login
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: 
                    type: string
        '400':
          description: input value error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: 密碼錯誤
        '401':
          description: not member
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: 您尚未註冊會員
        '500':
          description: other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: 伺服器回傳錯誤
    get:
      tags:
        - members
      summary: member login
      responses:
        '200':
          description: get member information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1
                  name:
                    type: string
                    example: example
                  email:
                    type: string
                    example: example@gmail.com
                  phone:
                    type: string
                    example: 0988777666
                  merchant_id:
                    type: string
                    example: 1
                  delever_id:
                    type: string
                    example: 1
                  exp:
                    type: string
        '500':
          description: service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: 伺服器回傳錯誤
  /api/orders:
    post:
      tags:
        - orders
      summary: create member order information
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id: 
                    type: string
                  member_id:
                    type: string
                    example: 1,
                  name:
                    type: string
                    example: example
                  phone:
                    type: string
                    example: 0988777666
                  destination:
                    type: string
                  lat:
                    type: string
                  lng:
                    type: string
                  pay:
                    type: string
                    example: 100
        '403':
          description: other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  支付失敗, 原因:
                    type: string
        '500':
          description: other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: error message
    put:
      tags:
        - orders
      summary: update member order information
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: [shopname, item-picture]
    get:
      tags:
        - orders
      summary: list orders nearby to deliver
      responses:
        '200':
          description: get orders nearby
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    example: [(order_id, item, piece, shopname, shopaddress, lat, lng, 
                        destination, destination_lat, destination_lng),(第二筆訂單資料)]
        '500':
          description: Service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: error message
    
  /api/orders/id:
    get:
      tags:
        - orders
      summary: get member order information
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: {原味蛋餅: 1,...}
        '500':
          description: other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: boolean
                    example: true
                  message: 
                    type: string
                    example: error message
  /api/stores:
    get:
      tags:
        - stores
      summary: get nearby stores' information
      responses:
        '200':
          description: successful get datas
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: {'id': 1,'bossemail': example@gmail.com,'phone':0977888999,'shopname': store,'shopPhoto': store-img, 'shopAddress': store-address, 'lat': 20.366,'lng': 120.45, 'start': 08:30, 'end': 20:30, 'holiday': 星期一, 'category_photo': icon, 'category': 10, 'menu': {menudata}}
  
  /api/stores/id:
    get:
      tags:
        - stores
      summary: get specific store's information
      responses:
        '200':
          description: successful get datas
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: {'id': 1,'bossemail': example@gmail.com,'phone':0977888999,'shopname': store,'shopPhoto': store-img, 'shopAddress': store-address, 'lat': 20.366,'lng': 120.45, 'start': 08:30, 'end': 20:30, 'holiday': 星期一, 'category_photo': icon, 'category': 10, 'menu': {menudata}}

  /api/items:
    put:
      tags:
        - stores
      summary: get specific store's items
      responses:
        '200':
          description: successful get data
          content:
            application/json:
              schema:
                type: object
                properties:
                  shop:
                    type: string
                    example: shopname
                  data:
                    type: object
                    example: [原味蛋餅, 泡菜蛋餅, ...]
  /api/carts:
    post:
      tags:
        - carts
      summary: user insert item to cart
      responses:
        '200':
          description: successful insert data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: success
    put:
      tags:
        - carts
      summary: get user's cart information
      responses:
        '200':
          description: successful get data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: [member_id, merchant_id, item, piece, price]
    delete:
      tags:
        - carts
      summary: delete item in cart
      responses:
        '200':
          description: successful delete data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: success